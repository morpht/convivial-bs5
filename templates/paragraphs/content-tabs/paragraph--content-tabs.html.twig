{#
/**
 * @file
 * Theme override implementation to display Content Tabs paragraph component.
 *
 * Available variables:
 * - plugin_id: The ID of the block implementation.
 * - label: The configured label of the block if visible.
 * - configuration: A list of the block's configuration values.
 *   - label: The configured label for the block.
 *   - label_display: The display settings for the label.
 *   - provider: The module or other provider that provided this block plugin.
 *   - Block plugin specific settings will also be stored here.
 * - content: The content of this block.
 * - attributes: array of HTML attributes populated by modules, intended to
 *   be added to the main container tag of this template.
 *   - id: A valid HTML ID and guaranteed unique.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 *
 * @see template_preprocess_block()
 */
#}
{{ attach_library('convivial_bootstrap/content-tabs') }}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
]
%}
{% block paragraph %}
  <div{{ attributes.addClass(classes) }}>
    <div class="containerised">
      {% block content %}
        {{ title_prefix }}
        {{ title_suffix }}
        {{ content|without('field_cts_tabs') }}
        <div class="tabs js-tabs">
          <ul class="nav nav-tabs mb-3 js-tablist">
            {# Loops through the tab sections to print the tab section titles. #}
            {% for key, item in content.field_cts_tabs if key|first != '#' %}
              {% if item['#paragraph'].field_ct_id.value %}
                {% set tabId = item['#paragraph'].field_ct_id.value %}
              {% else %}
                {% set tabId = 'tab-' ~ item['#paragraph'].id() %}
              {% endif %}
              <li class="nav-item js-tablist__item">
                <a class="nav-link js-tablist__link" href="#{{ tabId }}"{% if item['#paragraph'].field_ct_default.value|render == '1' %} data-selected="1"{% endif %}>
                  {{ item['#paragraph'].field_ct_label.value }}
                </a>
              </li>
            {% endfor %}
          </ul>
          <div class="tab-content">
            {{ content.field_cts_tabs }}
          </div>
        </div>
      {% endblock %}
    </div>
  </div>
{% endblock paragraph %}
