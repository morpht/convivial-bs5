// Container widths
//
// Set the container width.
// See convivial_bootstrap/libraries/bootstrap/scss/_containers.scss
@mixin container-max-widths($container-max-widths: $container-max-widths) {
  @each $breakpoint, $container-max-width in $container-max-widths {
    @include media-breakpoint-up($breakpoint) {
      max-width: $container-max-width;
    }
  }
}

// Social share icons
//
// Mixin for calculating all the modifications variants.
// See convivial_bootstrap/components/social-share/_social-share.scss
@mixin social-share-size($size-num) {
  .social-share__service {
    height: nth($sizes, $size-num);
    line-height: nth($sizes, $size-num);
    padding-right: calc(nth($sizes, $size-num) / 4);
    width: nth($sizes, $size-num);

    @include media-breakpoint-up(sm) {
      width: auto;
    }

    &:before {
      background-size: calc(nth($sizes, $size-num) / 1.6) calc(nth($sizes, $size-num) / 1.6);
      height: nth($sizes, $size-num);
      line-height: nth($sizes, $size-num);
      width: nth($sizes, $size-num);
    }
  }
  &.social-share--rounded .social-share__service {
    border-radius: $social-share-border-radius;

    &:before {
      border-radius: $social-share-border-radius;
    }
  }
  &.social-share--pill .social-share__service {
    border-radius: calc(nth($sizes, $size-num) / 2);

    &:before {
      border-radius: calc(nth($sizes, $size-num) / 2);
    }
  }
  &.social-share--half-pill .social-share__service {
    border-radius: calc(nth($sizes, $size-num) / 2);

    @include media-breakpoint-up(sm) {
      border-radius: calc(nth($sizes, $size-num) / 2) $social-share-border-radius $social-share-border-radius calc(nth($sizes, $size-num) / 2);
    }

    &:before {
      border-radius: calc(nth($sizes, $size-num) / 2);
    }
  }

  &.social-share--row .social-share__service {
    margin: calc(nth($sizes, $size-num) / 10);
  }

  &.social-share--column .social-share__service {
    width: auto;

    + .social-share__service {
      margin-top: calc(nth($sizes, $size-num) / 5);
    }
  }

  &.social-share--icon-only .social-share__service {
    overflow: hidden;
    width: nth($sizes, $size-num);
  }

  &.social-share--label-only .social-share__service {
    padding-left: calc(nth($sizes, $size-num) / 4);
    text-align: center;
    width: auto;

    &:before {
      display: none;
    }
  }
}

// Tiles grid item
//
// Mixin for calculating number of items within row.
// See convivial_bootstrap/components/tiles/_tiles.scss
@mixin tiles-grid-item($amount) {
  @for $i from 1 through $amount {
    &:nth-of-type(#{$amount}n + #{$i}) {
      grid-column: #{$i + $i - 1} / span 3;
      @if $i % 2 == 0 {
        grid-row: calc(var(--counter) + var(--counter) - 1) / span 2;
      }
    }
  }

  @for $i from 1 through 20 {
    &:nth-of-type(n + #{$i * $amount + 1}) {
      --counter: #{$i + 1};
    }
  }
}

// Button variants
//
// Easily pump out default styles, as well as :hover, :focus, :active for all buttons
@mixin convivial-button-variant(
  $background,
  $color,
  $border: $background,
  $hover,
  $focus,
  $active: $focus,
) {
  @include gradient-bg($background);
  @include box-shadow($btn-box-shadow);

  color: $color;
  border-color: $border;

  &:hover {
    color: $color;
    background-color: $hover;
    border-color: $hover;
  }

  &:focus {
    @include gradient-bg($hover);
  }

  &:focus,
  &:active,
  &.active {
    color: $color;
    outline: $btn-outline-width $btn-outline-style $active;
    outline-offset: $btn-outline-offset;
  }
}

@mixin convivial-outline-button-variant(
  $color,
  $color-hover,
  $focus,
  $active-background: $color,
  $active-border: $color,
  $active-color: $color-hover
) {
  color: $color;
  border-color: $color;

  &:hover {
    color: $color-hover;
    background-color: $active-background;
    border-color: $active-border;
  }

  &:focus {
    outline: $btn-outline-width $btn-outline-style $focus;
  }

  &:focus,
  &:active,
  &.active {
    color: $active-color;
    background-color: $active-background;
    border-color: $active-border;

    // Remove CSS gradients if they're enabled
    background-image: if($enable-gradients, none, null);
  }
}
