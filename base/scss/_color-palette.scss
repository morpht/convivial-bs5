/*! @convivial_bootstrap/color-palette */
:root {
  --alt-text: rgba(0, 0, 0, 0.6);

  --dark-accent: #9FD5F9;
  --dark-bg: #064771;
  --dark-focus: #DBA4F9;
  --dark-link: #68BEF8;

  --light-accent: #064771;
  --light-bg: #F0F0F0;
  --light-focus: #8806AC;
  --light-link: #066DAC;

  --primary-dark-accent: #FBFCFE;
  --primary-dark-bg: #066DAC;
  --primary-dark-focus: #FCF7FD;
  --primary-dark-link: #FBFCFE;

  --primary-light-accent: #064771;
  --primary-light-bg: #D9EEFC;
  --primary-light-focus: #83079C;
  --primary-light-link: #07609C;

  --standard-accent: #064771;
  --standard-dark: #000000;
  --standard-focus: #9506BC;
  --standard-light: #FFFFFF;
  --standard-link: #066DAC;
}

.cp {
  margin-top: 2rem;
  margin-bottom: 2rem;
  padding: 2rem;

  // Reset side padding and margin for edgy layouts.
  .layout--content-edgy &,
  .edgy:not(.edgy--contained) & {
    margin-top: 0;
    margin-bottom: 0;

    // Only on desktop.
    @include media-breakpoint-up(md) {
      padding-left: 0;
      padding-right: 0;
    }
  }
}

$palettes: (
  light: (
    isdark: false,
    bg: var(--light-bg),
    link: var(--light-link),
    accent: var(--light-accent),
    focus: var(--light-focus)
  ),
  dark: (
    isdark: true,
    bg: var(--dark-bg),
    link: var(--dark-link),
    accent: var(--dark-accent),
    focus: var(--dark-focus)
  ),
  primary: (
    isdark: false,
    bg: var(--primary-light-bg),
    link: var(--primary-light-link),
    accent: var(--primary-light-accent),
    focus: var(--primary-light-focus)
  ),
  primary-dark: (
    isdark: true,
    bg: var(--primary-dark-bg),
    link: var(--primary-dark-link),
    accent: var(--primary-dark-accent),
    focus: var(--primary-dark-focus)
  ),
);

// Palettes.
@each $label, $map in $palettes {
  $isdark: map-get($map, isdark);

  .cp--#{$label} {

    // Background.
    background-color: map-get($map, bg);

    // Links.
    a {
      color: map-get($map, link);

      &:focus {
        outline: solid map-get($map, focus);
      }

      @if $isdark == true {
        &:hover {
          filter: brightness(85%);
        }
      } @else {
        &:hover {
          filter: brightness(135%);
        }
      }
    }

    // Foreground.
    @if $isdark == true {
      color: var(--standard-light);
      --alt-text: $white;
    } @else {
      color: var(--standard-dark);
    }

    // Buttons.
    // The darkness of the background will determine if things are lightened or darkened here.
    @if $isdark == true {
      .btn.btn-primary {
        @include convivial-button-variant(map-get($map, accent), map-get($map, accent), $darken-90);
      }
      .btn.btn-secondary {
        @include convivial-button-variant(map-get($map, link), map-get($map, link), $darken-90);
      }
      .btn.btn-light {
        @include convivial-button-variant($lighten-90, $lighten-90, $darken-90);
      }
      .btn.btn-dark {
        @include convivial-button-variant($darken-10, $darken-10, $lighten-90);
      }
      .btn.btn-outline-primary {
        @include convivial-outline-button-variant(map-get($map, accent), $darken-90);
      }
      .btn.btn-outline-secondary {
        @include convivial-outline-button-variant(map-get($map, link), $darken-90);
      }
      .btn.btn-outline-light {
        @include convivial-outline-button-variant($lighten-90, $darken-90);
      }
      // On dark backgrounds, the dark button looks same as the light button.
      .btn.btn-outline-dark {
        @include convivial-outline-button-variant($lighten-90, $darken-90);
      }
    } @else {
      .btn.btn-primary {
        @include convivial-button-variant(map-get($map, accent), map-get($map, accent), $lighten-90);
      }
      .btn.btn-secondary {
        @include convivial-button-variant(map-get($map, link), map-get($map, link), $lighten-90);
      }
      .btn.btn-light {
        @include convivial-button-variant($darken-10, $darken-10, $darken-90);
      }
      .btn.btn-dark {
        @include convivial-button-variant($darken-90, $darken-90, $lighten-90);
      }
      .btn.btn-outline-primary {
        @include convivial-outline-button-variant(map-get($map, accent), $lighten-90);
      }
      .btn.btn-outline-secondary {
        @include convivial-outline-button-variant(map-get($map, link), $lighten-90);
      }
      // On light backgrounds, the light button looks same as the dark button.
      .btn.btn-outline-light {
        @include convivial-outline-button-variant($darken-90, $lighten-90);
      }
      .btn.btn-outline-dark {
        @include convivial-outline-button-variant($darken-90, $lighten-90);
      }
    }

    // Callout.
    @if $isdark == true {
      .callout {
        background: rgba(0, 0, 0, 0.08);
        border: 1px solid rgba(255, 255, 255, 0.5);
        border-left-width: 5px;
      }
    } @else {
      .callout {
        background: rgba(0, 0, 0, 0.08);
        border: 1px solid rgba(0, 0, 0, 0.5);
        border-left-width: 5px;
      }
    }
  }
}
