/*! @convivial_bootstrap/button */

.btn {
  display: inline-block;
  font-family: $btn-font-family;
  font-weight: $btn-font-weight;
  line-height: $btn-line-height;
  color: var(--bs-btn-color);
  text-align: center;
  text-decoration: if($link-decoration == none, null, none);
  white-space: $btn-white-space;
  vertical-align: middle;
  cursor: if($enable-button-pointers, pointer, null);
  user-select: none;
  @include button-size($btn-padding-y, $btn-padding-x, $btn-font-size, $btn-border-radius);
  @include transition($btn-transition);

  &:hover {
    text-decoration: if($link-hover-decoration == underline, none, null);
  }

  &:focus {
    outline: $btn-outline-width $btn-outline-style var(--standard-link-active);
    outline-offset: $btn-outline-offset;
  }

  &:focus-visible {
    background: var(--standard-link-hover);
    box-shadow: none;
  }
}

//
// Alternate buttons
//

$buttons: (
  primary: (
    is_dark: true,
    background: var(--standard-accent),
    hover: var(--standard-accent-hover),
    active: var(--standard-accent-active),
  ),
  secondary: (
    is_dark: true,
    background: var(--standard-link),
    hover: var(--standard-link-hover),
    active: var(--standard-link-active),
  ),
  light: (
    is_dark: false,
    background: $darken-10,
    hover: $darken-20,
    active: $darken-25,
  ),
  dark: (
    is_dark: true,
    background: $darken-90,
    hover: $darken-95,
    active: $darken-80,
  ),
  success: (
    is_dark: true,
    background: var(--bs-success),
    hover: var(--bs-btn-hover-bg),
    active: var(--bs-btn-active-bg),
  ),
  danger: (
    is_dark: true,
    background: var(--bs-danger),
    hover: var(--bs-btn-hover-bg),
    active: var(--bs-btn-active-bg),
  ),
  warning: (
    is_dark: false,
    background: var(--bs-warning),
    hover: var(--bs-btn-hover-bg),
    active: var(--bs-btn-active-bg),
  ),
  info: (
    is_dark: false,
    background: var(--bs-info),
    hover: var(--bs-btn-hover-bg),
    active: var(--bs-btn-active-bg),
  ),
);

@each $name, $button in $buttons {
  $is_dark: map-get($button, is_dark);

  @if $is_dark == true {
    .btn.btn-#{$name} {
      @include convivial-button-variant(
        $background: map-get($button, background),
        $color: $lighten-90,
        $hover: map-get($button, hover),
        $focus:  map-get($button, active),
      );
    }
    .btn.btn-outline-#{$name} {
      @include convivial-outline-button-variant(
        $color: map-get($button, background),
        $color-hover: $white,
        $focus: map-get($button, active),
      );
    }
  } @else {
    .btn.btn-#{$name} {
      @include convivial-button-variant(
        $background: map-get($button, background),
        $color: $darken-90,
        $hover: map-get($button, hover),
        $focus: map-get($button, active)
      );
    }
    .btn.btn-outline-#{$name} {
      @include convivial-outline-button-variant(
        $color: map-get($button, background),
        $color-hover: $black,
        $focus: map-get($button, active)
      );
    }
  }
}

// Override for light button.
// On light backgrounds, the light button looks same as the dark button.
.btn.btn-outline-light {
  @include convivial-outline-button-variant(
    $color: var(--dark-background),
    $color-hover: $lighten-90,
    $focus: var(--dark-link-active)
  );
}

// Link buttons
// Make a button look and behave like a link
.btn-link {
  font-weight: $font-weight-normal;
  color: var(--standard-link);
  text-decoration: $link-decoration;

  &:hover {
    text-decoration: $link-hover-decoration;
  }

  &:focus {
    background: transparent;
    text-decoration: $link-hover-decoration;
    outline: $btn-outline-width $btn-outline-style var(--standard-link-active);
    outline-offset: $btn-outline-offset;
  }
}
